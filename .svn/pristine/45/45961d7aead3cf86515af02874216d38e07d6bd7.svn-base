<template>
  <div class="header">
    <div class="mapDesignIcon">MapDesign</div>
    <div class="savesBtns">
      <el-button type="success" @click="saveMap">保存</el-button>
    </div>
  </div>
</template>

<script>
  import { mapActions, mapGetters, mapMutations } from 'vuex'
  import Tool from '@/components/tool.vue'

  export default {
      name: 'header',
    data () {
      return {

      };
    },
    computed: {
      ...mapGetters([
        'render'
      ])
    },
    created () {

    },
    mounted () {

    },
    methods: {
      /* 保存新创建的地图 */
      saveMap () {
        var url = 'mapdesign/maps/add';
        //var url = 'mapdesign/map/TBMAP000003/update';

        var layers = this.getSavedLayers();

        var img = '';

        var params = "data=" + JSON.stringify({
            lid: 1,
            description: this.render.newMapInfo.description,
            tag: this.render.newMapInfo.tag,
            mark: this.render.newMapInfo.name,
            createdate: "2017-07-26",
            modifydate: "2017-07-26",
            img: img,
            layers: layers
          });

        console.log('params', {
          lid: 1,
          description: this.render.newMapInfo.description,
          tag: this.render.newMapInfo.tag,
          mark: this.render.newMapInfo.name,
          createdate: "2017-07-26",
          modifydate: "2017-07-26",
          img: img,
          layers: layers
        })

        this.$http.post(url, params).then((res) => {
          if (res.data) {
            this.$message({
              showClose: true,
              message: '成功保存至数据库',
              type: 'success',
            });
            this.$router.replace({name: 'mapDesign'});
          }
        }).catch((err) => { console.log(err) });
        console.log('this.render.savedLayers', this.render.savedLayers);
      },

      getSavedLayers () {
        var savedLayers = Tool.clone(this.render.savedLayers);
        var temOverLayer = savedLayers.over_layer;
        temOverLayer.forEach((item) => {
          var temStyle = item.render.style;
          var temRType = item.render.rtype;

          /*switch (temRType) {
           case 'simple':
           delete temStyle.field;
           delete temStyle.isLine;
           delete temStyle.isPolygon;
           delete temStyle.isPoint;
           delete temStyle.fieldStyleArray;

           break;

           case 'type':
           case 'grade':
           delete temStyle.fill;
           delete temStyle.border;
           delete temStyle.isLine;
           delete temStyle.isPolygon;
           delete temStyle.isPoint;
           }*/

        });

        return savedLayers;
      },
    }
  }
</script>

<style scoped>
  .header {
    width: 100%;
    height: 100%;
  }

  .mapDesignIcon {
    width: 82px;
    position: absolute;
    left: 30px;
    font-weight: bold;
  }

  .savesBtns {
    width: 150px;
    position: absolute;
    right: 50px;
  }
</style>
